#+TITLE: Python

As with other languages, here also we have two sets of code style rules that we
try to follow:

1. [[https://github.com/python/mypy][mypy]] and [[https://github.com/PyCQA/flake8][flake8]] cover the /enforced/ category of rules.
2. [[https://github.com/PyCQA/pylint][pylint]], [[https://github.com/jendrikseipp/vulture][vulture]] and [[https://github.com/openstack/bandit][bandit]] are /optional/ but /recommended/.

Config files specifying the rules we disabled or enabled for each tool are in
this directory.

For a package named ~pkg~, we tend to run these in the /optional/ step:

#+begin_src shell
poetry run pylint --rcfile ./.pylintrc ./pkg ./scripts ./tests
poetry run bandit -r ./pkg
poetry run vulture ./pkg ./scripts ./tests
#+end_src

** Python version

At the moment, we use ~^3.6~ in all our deployments. The recommended way to
install python is using [[https://github.com/pyenv/pyenv-installer][pyenv]] (not to be confused with ~pyvenv~ which is for
managing virtual environments) which lets you make easy switches between a
python versions.

** Packaging

Although not perfect, we recommend using [[https://github.com/sdispater/poetry][poetry]] for creating and working with
packages (or, at least, for managing virtual environments). If using pyenv,
install poetry at the system level (using, say, ~pyenv global system~).

** Scripting

For scripts written as parts of a package or without them, we recommend [[https://github.com/docopt/docopt][docopt]]
for handling the command line entry.
